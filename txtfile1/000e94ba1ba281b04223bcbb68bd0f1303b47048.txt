

and segment COVID-19 lesion from chest CT images. Oulefki et al. [10] presented the utility of an automated tool of segmentation and measurement for COVID-19 lung Infection using chest CT imagery. Owing to the fact that lung infected region segmentation is a necessary initial step for lung image analysis, some image segmentation algorithms are also proposed for some specific application scenarios. For instance, an improved Inf-Net was proposed to segment the infection area of the novel coronavirus, and a semi-supervised training method is put forward to solve insufficient amount of labeled CT and improve the segmentation performance [6] . Currently, most of the methods are based on detection and classification tasks, but not much on the semantic segmentation of infection on CT slices [4] , so that the assessment and staging COVID-19 infection are greatly limited. Therefore, according to CT imaging characteristics, it is necessary to propose some segmentation methods for the infection regions of COVID-19, so that we can further achieve quantitative analysis of the lesions.However, it is a still challenging task to accurately segment the infected lesions of COVID-19 on CT images owing to the following facts.1. The infections have irregular boundary, different sizes and shapes from slice to slice on CT images (shown in Figure 1(a) ). It would easily lead to missing some small ground-glass lesions or generating excessive over-segmentation for the infections on CT images.2. There seems to be no discernible difference between infections and normal tissues (shown in Figure 1 (b)). It is unaffected for the detection or classification, but it can decrease segmentation accuracy and quantified quality.3. The existing semantic segmentation approaches like the encoder-decoder structure exist a "semantic gap" between low-level visual features and high-level semantic concepts, which greatly limits the efficiency of semantic segmentation. To address these issues, a novel segmentation scheme is proposed for the infections of COVID-19 based on the encoder-decoder architecture [11] in this paper, and the proposed scheme can collaboratively enhance supervised information of different levels and fuse different scale feature maps. For the proposed deep collaborative supervision scheme, we propose an Auxiliary Semantic Supervised Module (ASSM) and an Edge Supervised Module (ESM) to guide the network learning the features of edges and semantics in the encoding stage, respectively. As for multi-scale feature maps, an Attention Fusion Module (AFM), following with the decoding stage, is proposed to reduce the semantic gaps between high-level and low-level feature maps. The proposed attention fusion strategy can take full advantage of different scale context information. Finally, a series of experiments are conducted on the COVID-19 dataset to verify the effectiveness of the proposed scheme. The results show that our method can obtain better performance for the segmentation of COVID-19 infections than the existing approaches. The main contributions of this paper are listed as follows.• An ESM is put forward to highlight low-level boundary features. The edge supervised information is incorporated into the initial stage of down-sampling, as the proposed edge supervised loss function allows to capture rich spatial information in various scales.• An ASSM i s proposed to enhance high-level semantics from feature maps with different scales. The mask supervised information is introduced into the later stage of down-sampling, thanks to the corresponding auxiliary semantic loss function that is defined to explore sufficient semantic information from various scale infections on COVID-19 CT images.• An AFM is developed to fuse various scale feature maps from the up-sampling stage. An attention mechanism is utilized to reduce the semantic gaps between high-level and low-level feature maps, so as to strengthen and supplement the lost detailed information in high-level representations.• A joint loss function is constructed by combining the edge supervised loss, auxiliary semantic supervised loss and fusion loss. It can guide the network achieving a deep collaborative supervision on edges and semantics, and prompting the fusion efficiency on multiple scale feature maps from different levels.This paper is organized as follows. Section 2 introduces the related works. Section 3 describes details about the proposed methods, including Edge Supervised Module (ESM), Auxiliary Semantic Supervised Module (ASSM) and Attention Fusion Module (AFM). Section 4 presents experiments, results and discussions, and Section 5 concludes this work.

Related works

In this section, we provide a short review of previous studies on network models, edge supervision, multi-scale object recognition, and attention mechanism.

Network Models

Deep network models are a kind of hierarchical feature learning methods by learning multiple levels of representation to model complex relationships among data, and higher-level features and concepts are thus defined in terms of lower-level ones, and such a hierarchy of features is called a deep architecture [12] . Usually, the first layers will learn the low level features like intensity, color, lines, dots and curves, then the more the layers approach the output layer, the more the layers will learn the high level features like objects and shapes in a feature extracting pipeline. For example, from AlexNet [13] , VGG [14] to ResNet [15] , the ability of feature extraction is becoming more and more powerful with the deepening of the network depth. Accordingly, the deeper networks can provide a powerful feature extraction ability for semantic segmentation tasks, and can greatly improve segmentation accuracy.Since FCN [16] is proposed, other semantic segmentation networks attempt to improve this architecture by adding new modules to solve the problems regarding the lack of spatial and contextual information. For example, U-Net [11] is greatly improved only by adding the skip connection based on FCN. PSPNet [17] employs pyramid pooling module to explore the global context information, and it can improve the accuracy of target segmentation at different scales. Besides, DeepLabV3+ [18] combines the advantages of Spatial Pyramid Pooling (SPP) module and encoder-decoder structure, and further explore the Xception model and apply the depthwise separable convolution to both Atrous Spatial Pyramid Pooling (ASPP) and decoder modules. PSANet [19] can capture pixel level relationship and relative position information in spatial dimension through convolution layer. In addition, EncNet [21] also introduced a channel attention mechanism to capture the global context. Although many advanced network structures have been emerged for semantic segmentation tasks, U-Net and its derivatives are still the most popular architecture and have been widely applied in the medical imaging community [27, 37] . However, despite their outstanding overall performance in segmenting medical images, the U-Net-based architecture seems to be lacking in certain aspects. For example, although the high-level feature map can be optimized through the concatenation the feature maps of the low-level layers and the high-level layer by using skipping connection, it is still very difficult to reduce the semantic gap between low-level visual features and high-level semantic features. Thus, we select ResUNet as the backbone to attempt to exploit a novel segmentation architecture for the COVID-19 segmentation task in this work.

Edge Supervision and Multi-scale Object Recognition

Edge information, as an important image feature, is drawing more and more attention in deep learning community owing to the fact that edge information is conducive to the extraction of object contour in segmentation tasks. For example, explicit edge-attention are utilized to model the boundaries and enhance the representations in [6] . Wu et al. [22] proposed a novel edge aware salient object detection method, and it passes messages between two tasks in two directions, and refines multi-level edge and segmentation features. ET-Net [23] integrates edge detection and object segmentation into a deep learning network, and the edge attention representation is embedded to supervise the segmentation prediction. Normally, edge information can provide useful fine-grained constraints to guide feature extraction in semantic segmentation tasks. However, high-level feature maps have little edge information, while low-level layers contain richer object boundaries.For the multi-scale object recognition problem, it is common practice to exploit multiple levels of coarse and fine-grained semantic features by adopting different network structures in computer vision. For example, the operations of convolution and pooling on the original image is used to obtain feature maps of different sizes, and it is similar to constructing pyramids in the feature space of images. Feature Pyramid Networks (FPN) [24] is one of the most typical examples, and it adopts a top-down architecture with lateral connections for building high-level semantic feature maps at all scales. It has been demonstrated a significant improvement as a generic feature extractor in detection tasks, and has been widely applied in different detection architectures, such as Faster R-CNN [25] and Mask R-CNN [26] .It is widely known that the low-level feature maps pay more attention to detail information, while the high-level lay much attention to semantic information. More specifically, the encoded pathway is mainly used for feature extraction, and there are hierarchy and gradation for various feature. Because the spatial resolution and the semantics can be decreased and strengthened along with the deepening of down-sampling, respectively. Significantly, FPN [24] and U-Net [11] both adopt encoder-decoder architecture, but they are respectively applied in object detection and semantic segmentation. The main difference is that there are multiple prediction layers for various scale features in FPN [24] . Inspired by this, we attempt to exploit sufficient multi-scale context information from different levels of the encoder in this work. Low level detailed feature maps can exploit rich spatial information, and they could strengthen the boundaries of the infected regions; while high-level semantic feature maps can endow position information, and they could locate the infected regions.

Attention Mechanism

Attention can be regarded as a mechanism, and it emphasizes the features that need attention through the context of feature maps. Normally, an attention mechanism is used to highlight the important context in the channel-wise or space-wise [7, 8] , while suppressing the context information irrelevant to the content. For example, Fu et al. [28] proposed Dual Attention Network (DAN), and two attention modules were introduced to capture the spatial dependence between any two positions in the feature maps. A similar self-attention mechanism was used to capture the channel dependence between any two channels, and the weighted sum of all channel was utilized to update each channel. Huang et al. [29] proposed Criss-Cross Net (CCNet) to capture this important information in a more effective way, specifically, for each pixel, CCNet can obtain the context information on its crisscross path through a Criss-Cross attention module. Non-local operations, proposed by Wang et al. [30] , can directly capture remote dependencies by calculating the interaction between any two locations. Besides, an attention mechanism is also used to aggregate different levels of features to bridge the semantic gaps between low-level features and high-level semantics. For example, Li et al. [31] proposed Gated Fully Fusion(GFF) to fully fuse multi-level feature maps controlled by learned gate maps, and the novel module can bridge the gap between high resolution with low semantics and low resolution with high semantics. Inspired by this, we adopt an attention mechanism to fuse various level feature maps, and the proposed AFM can reduce the semantic gaps between high-level and low-level feature maps, so as to strengthen and supplement the missing detailed information in high-level representations.

Methods

In this section, we first present the proposed network architecture. Then we introduce in details the proposed three modules: ESM, ASSM and AFM.

Proposed Network Architecture

As mentioned above, U-Net [11] and FPN [24] both have a similar encoder-decoder structure for multi-scale object vision tasks, consisting of a contracting path to capture context and a symmetric expanding path that enables precise localization. While U-Net [11] creates a path for information propagation allowing signals propagate between low and high levels by copying low level features to the corresponding high levels. Despite achieving good segmentation performance in U-Net and its variations, however, the edge information and channels would decrease and increase along with down-sampling of the contracting path, respectively. Both cases can lead to effective information missing, thereby not exploring sufficient information from full scales so as to suffer segmentation performance degradation. While FPN [24] can overcome these drawbacks to retain multi-scale contextual information by using multiple prediction layers: one for each up-sampling layer. Based on this idea, we propose a novel segmentation scheme for the infections of COVID-19. Figure 2 illustrates the proposed network architecture. Firstly, we collaboratively enhance the supervised information by introducing edge and semantic information into the encoding stage. Note that the initial stages are used for the edge supervision, while the later stages for the semantic supervision. They occupy the whole down-sampling together, more precisely, the sum of the low-level and high-level layers is equal to the total layers of the encoder. Especially, low-level feature maps from shallow layers are with high resolution, but with limited semantics, whereas high-level feature maps from deep layers have low spatial resolution without detailed information (like object boundaries). When various levels are selected to enhance the supervised information, there is a trade-off between edge supervision and semantic supervision, thus we call it "collaborative supervision" ("Co-supervision"). Then we fuse multi-scale feature maps of different levels from the decoding stage in an encoder-decoder framework (like U-Net). Considering the fact that low level detailed feature maps have high resolution and can capture rich spatial information like object boundaries, we design an ESM to highlight low-level boundary features by incorporating the edge supervised information into the initial stage (like S 1 and S 2 in Figure 2 ) of down-sampling in the encoder. While high-level semantic feature maps embody position information like object concepts, thus we present an ASSM to strengthen high-level semantic information by integrating object mask supervised information into the later stage (like S 3 ∼ S 5 in Figure 2 ). Finally, the obtained various scale feature maps from the up-sampling stage are fused by adopting an attention mechanism to achieve good segmentation performance for infections of COVID-19.

Edge Supervised Module (ESM)

Many studies [22, 23] show that the edge information can provide effective constraints to the feature extraction in the segmentation task. To supplement the missing edge information along with down-sampling, we propose ESM to further highlight the object boundary features in the low-level layers. Because feature maps of low level from shallow layers are with high resolution and detailed information (including edge information), and these detailed information are easily lost during the initial stage of the down-sampling process, the proposed ESM can capture more detailed information like object boundaries. Specifically, we can guide the network to extract edge features from the initial stages like S 1 and S 2 (shown in Figure 2 ) by defining edge supervised loss function. To this end, the output feature maps from the initial stage are firstly resized to the size H × W of the original image by using bilinear interpolation up-sampling. Then the obtained large feature maps of each layer in ESM are reduced to a feature map by using 1 × 1 convolution operation. Finally each pixel value is converted to a probability by using Sigmoid function σ(·) (shown in Figure 3 (a)), and an edge prediction image with H × W is obtained. Accordingly, the edge supervised loss function is given based on Dice coefficient as follows.where S i edge is the edge prediction image obtained by using bilinear interpolation up-sampling in the i th stage. G edge is the corresponding Ground Truth (GT) of edge image, which is obtained by generating edge GT from the segmentation mask. l is the number of stages used for edge supervised in the ESM. ζ i (i = 1, . . . , l) is the weight coefficient of the i th stage. By using skip connections and AFM, the edge features in the high-level feature maps can also be strengthened. 

Auxiliary Semantic Supervised Module (ASSM)

For the multi-scale object segmentation, the multi-level loss function is used to build receptive fields of different sizes for different layers in the network. For example, FPN [24] uses multi-level auxiliary loss to detect objects at different scales, and it is a great breakthrough in multi-scale object detection task. Inspired by this, we develop an ASSM based on the similar strategy in our network. Specifically, the semantic information is gradually strengthened along with the down-sampling process in the encoder, and the high-level feature map has rich semantics but low spatial resolution without detailed information. Different layers contain different level semantic features according to the feature hierarchy of the contracting path. Thereby we can define an auxiliary semantic loss function to reduce the semantic gaps between high-level and low-level feature maps in the later stage (i.e.,S 3 ∼ S 5 ) of the encoder. Eventually, low-level semantic features can be strengthened by using multi-scale skip connections and AFM, and it can also reduce the background noise in the low-level feature maps.Similar to the above steps in ESM, we can obtain one coarse segmented image with the size of H × W and the probability of each pixel through a series of operations, such as bilinear interpolation, 1 × 1 convolution, and Sigmoid function σ(·) (shown in Figure 3(b) ). Then the auxiliary semantic loss function is defined based on Dice coefficient as follows.where S i mask and G mask are the obtained coarse segmented image in the i th stage of the Encoder and the Ground Truth (GT) of segmentation mask, respectively. ω i (i = l + 1, . . . , 5) is the weight coefficient of the i th stage.

Attention Fusion Module (AFM)

As mentioned above, high-level features are very efficient in semantic segmentation tasks. However, the high-level feature maps easily lead to inferior results for small or thin objects owing to the fact that the operations of convolution and pooling can cause the detailed information missing, thereby high-level feature maps have coarse resolution. To compensate the lost detailed information in high-level representations, it is necessary to import low level features. However, the full-scale skip connections can only incorporate low-level details with high-level semantics from feature maps in different scales of the same level, and the semantic gaps existing among various levels hampers the effectiveness of the semantic segmentation. Thus we propose the AFM to fuse multi-scale feature maps of different levels by using an attention mechanism to strengthen and supplement the lost detailed information in high-level representations. Gated Fully Fusion(GFF) [31] can selectively fuse features from multiple levels using gates in a fully connected way, and add weights to each spatial position by using skip connection. Inspired by this idea, an attention mechanism is incorporated into the AFM by aggregating different level features, aiming at reducing the semantic gaps between low-level features and high-level features. The corresponding attention mechanism is illustrated in Figure 4 . In general, we can directly obtain the segmentation maps from the top feature map X 1 (∈ R C×H×W , where c, h and w are the channel number, height and width, respectively) of the expansive path in the standard U-Net. The X 1 has high spatial resolution because the outputs need to be with the same resolution as the input image, but actually, multiple downsampling and up-sampling operations make the deep network cause mistake and loss in the detailed information. As well as strengthening the top feature map X 1 , therefore, we can aggregate feature maps of other levels (i.e., X 2 ∼ X 5 ) to supplement the lost detailed information caused by the filters or pooling operations. More precisely, we can obtain a confidence map P 1 (∈ R C×H×W ) through the attention block (AB) of the top feature map X 1 . The points with high confidence have a greater possibility to retain the original feature map values, and vice versa. Similarly, the lost detailed information is represented by the confidence map 1 − P 1 , in which the higher the value, the less object information it contains. Thus, we can strengthen the top feature map X 1 through the dot product between the confidence map P 1 and X 1 , and can supplement the lost detailed information by using dot product between the confidence map 1 − P 1 and the sum of other feature maps. The procedure of the attention block is illustrated in Figure 5 , and the final prediction result S P can be defined as follows.where Y i is the output by using the attention block to process the corresponding X i . While X i is firstly up-sampled to the same size with the input image by bilinear interpolation. Then Y i can be obtained by processing the up-sampling intermediate result X u i based on the attention block, and it is defined as follows.where Φ A (·) is the attention function.The specific process is as follows.1. Each up-sampling feature map (X i ) is processed through an attention block.2. After an 1 × 1 convolution operation, the channels are reduced to 64, and we can obtain the i th level feature maps.3. Then the resolution is resized to H × W by using bilinear interpolation.4. After the operation of a convolution and Sigmoid function σ(·), we can obtain the confidence output Y i by using a dot product Y i = P i · X u i . Note that the top feature map X 1 is selected as the main prediction, while other confidence output only as the supplement of Y 1 = Φ A (X 1 ). When P 1 is small, it means that the corresponding confidence is low, and thereby we can compensate the lost information by doing a dot product between (1 − P 1 ) and the sum of the confidence outputs of other layer feature maps X i (i = 2, . . . , 5).5. Finally, the final prediction result S p is obtained by summing the residuals of X 1 . The specific process is shown in Algorithm 1.The loss function for fusion is defined as follows:where G represents the ground truth of COVID-19.

Algorithm 1 Fusion Algorithm

Require: Feature map while up-sampling X i (i∈[1,. . . ,5]) Ensure: Prediction S p 1: Adopt 1 × 1 convolution on X i to change its channel number to 64 2: Resize the above obtained feature maps to the original image size of H × W by using up-sample, and obtain X u i 3: Adjust X u i to one channel by using 3 × 3 convolution 4: Generate the confidence map P i by adopting Sigmoid function σ(·) 5: Obtain Y i by doing a dot product between X u i and P i in each channel, and perform the sums 5 i=2 Y i 6: Do a dot product between (1 − P 1 ) and 5 i=2 Y i , and obtain (1 − P 1 ) 5 i=2 Y i 7: Obtain the prediction S p by calculating the summation of X 1 , Y 1 and (1 − P 1 ) 5 i=2 Y i 8: return S p L total = θL edge + βL semantic + L f usion (6) where θ and β are weight coefficients.Considering the fact that there would be negative values in the category imbalance case when using the crossentropy loss function. Therefore, we select Dice loss to supervise the predictions and labels in our experiments. To achieve deep fusions and supervisions for the features of different level, the overall loss function integrates ESM, ASSM and AFM, given as Eq. 6.

Datasets and Baselines

We collect the COVID-19 segmentation dataset from two sources. One is from [32] , including more than 900 CT images, among them about 400 slices with infections. Another is from [33] , and it contains 3D CT images of 20 patients, and we can obtain 3686 images by converting from 3D volumes into 2D slices. Due to the small datasets, the two sources are put together in a total of 4449 2D slices, among them 4000 slices for training sets and 449 slices for test sets, respectively. The GT contains four categories: 0 ∼ 3 represent background, ground glass, consolidation and plural effect, respectively. Owing to the imbalance of infection categories in the dataset, for example, only few slices contain plural effect infection, we take all types of infection as one type. Considering the limitation of GPU memory, we resize the image resolution of 512 × 512 to 256 × 256 by bilinear interpolation, then Z-score is used for data normalization. Besides, to further verify the effectiveness and generalization ability of the proposed method, we select three additional public COVID-19 datasets for testing and comparison, including MosMedData [42] , UESTC-COVID-19 [41] and COVID-ChestCT [43] . MosMedData is a dataset of 100 axial CT images from more than 40 patients with COVID-19, including 829 slices with 512x512 size (see [42] for details), and UESTC-COVID-19 contains CT scans (3D volumes) of 50 patients diagnosized with COVID-19 from 10 different hospitals(see [41] for details). While COVID-ChestCT is a small dataset, and it contains 20 CT scans of patients diagnosed with COVID-19 as well as segmentations of lungs and infections made by experts (see [43] for details). We select ResUNet as the backbone of the proposed network, in which the down-sampling of U-Net is replaced with ResNet. To verify the effectiveness of the proposed scheme, we use a series of popular segmentation models for comparison in the medical image segmentation area, such as U-Net [11] , UNet++ [9] , and Attention U-Net [34] , and we compare our methods with two cutting-edge models from the semantic segmentation: DeepLabV3+ [18] and PSPNet [17] .

Evaluation Metrics and Experimental Settings

We adopt three metrics to evaluate our methods, such as Dice similarity coefficient, Sensitivity (Sens.), Precision (Prec.). Besides, we also introduce three golden metrics to verify the detection and segmentation performance from the object detection field, such as Structure Measure [35] , Enhance-alignment Measure [36] , and Mean Absolute Error. In our evaluation, we select S p as the final output prediction, and measure the similarity/dissimilarity between S p and ground-truth G, which can be formulated as follows. • Dice similarity coefficient: it is used to measure the proportion of intersection between S p and G, which is defined as follows.• Structure Measure (S α ): it is used to measure the structural similarity between a prediction S p and ground-truth G, which is more consistent with the human visual system.where S o and S r are the object-aware similarity and region-aware similarity, respectively. α is a balance factor between S o and S r . We report S α using the default setting (α = 0.5) suggested in the original paper.• Sensitivity (Sens.): it is used to measure the percentage of positive samples in the total number of patients, or the probability of no missed diagnosis. The formulation is given as follows.• Precision (P rec.): it is used to measure the percentage of samples with negative test in the total number of healthy people, or the probability of not misdiagnosing. The formulation is given as follows:• Enhanced-alignment Measure (E mean φ ): it is a recently proposed metric for evaluating both local and global similarity between two binary maps. The formulation is given as follows:where w and h are the width and height of ground-truth G, and (x, y) denotes the coordinate of each pixel in G. Symbol φ is the enhanced alignment matrix. We obtain a set of E φ by converting the prediction S p into a binary mask with a threshold from 0 to 255. In our experiments, we report the mean of E ξ computed from all the thresholds.• Mean Absolute Error (M AE): it is used to measure the pixel-wise error between S p and G, which is defined as:For the hyper-parameters in the experiments is given in Table 1 by try-and-error, respectively. Note that the learning rate is initially selected as 1e-4, then is reduced by a factor of 0.5 when the test loss is not improved within 25 epoch. Early stopping is used to avoid over-fitting. All experiments are conducted on a desktop computer with an E3-1230 v5 3.40GHz 8-core processor, and with a GeForce GTX 1070 graphics card. A GPU implementation accelerates the forward propagation and back propagation routines by using the Adam optimizer under the Pytorch framework. Each experiment is run three times, then its average and standard deviation ± are obtained. 

Quantitative results

A series of comparison experiments are implemented on our dataset, and the results are shown in Table 2 . From Table 2 , the proposed method can achieve the best performances among these methods in Dice, Sens. and P rec.. Thereinto, our method has improved by around 4.4% and 1.44% in the main metric-Dice coefficient compared with U-Net [11] and Inf-Net [6] , respectively. In particular, UNet++ [9] and Attention U-Net [34] represent the best U-Net-based methods in the medical image processing area, while Inf-Net [6] , CE-Net [38] and CPFNet [40] are the newest and best methods for the segmentation of medical images. It suggests that the proposed scheme is effective and competitive, and can effectively fuse the multi-scale and multi-level features to accurately achieve the COVID-19 infection segmentation.Besides, we further analyze the influence of edge supervision in different levels on segmentation performance by adding or reducing level edge supervision in the low-level features. To facilitate the analysis, ResUNet with Table 2 : Comparisons between different networks on our dataset. Bold black text and blue text represent the first and second best results, respectively. Co-supervision and Fusion Model (ResUNet_C i F) represents the first i levels (i.e., S 1 , . . . , S i ) in the low level to use ESM, while the rest (i.e., S i+1 , . . . , S n ) adopt ASSM in the Co-supervision, where n is the number of down-sampling (n = 5 here). The results is illustrated in Table 3 , and it is obvious that Dice coefficient firstly rises and then declines along the first level number i from 1 to 5. When i = 2 (i.e., ResUNet_C 2 F), the proposed method can obtain the best segmentation performance. It means that the features of low-level boundary and high-level semantic can both be strengthened as the first level number i increases and reduces, respectively. When i = 2, there is a trade-off between the number of low-level and high-level (i.e., the use of context and localization accuracy), consequently ResUNet_C 2 F can surpass other ResUNet_C i F in most metrics, such as Dice, M AE, E φ and S α . More precisely, the proposed ESM and ASSM can incorporate low-level details with high-level semantics from feature maps in different levels by using AFM.

Qualitative Results

To further demonstrate the effectiveness of the proposed scheme, we visualize the prediction results of different networks. As shown in Figure 6 , our method can remarkably outperform the baseline methods in the lung infection segmentation. Specifically, our segmentation results have much less mis-segmented tissues, while there are a lot of lossing and improper segmentation in the baseline U-Net and other methods. For the infection edge marked with a red box, for instance, our method can obtain a complete edge, and it is much closer to the real label in edge detail, which benefits from the more detailed edge information provided by the proposed ESM. Besides, from the regions marked by the blue box, our method can avoid over-segmentation, under-segmentation and incorrect segmentation efficiently. Especially in the 4 th rows, only our method and Deeplabv3+ can correctly detect the small infection (marked the blue box). It can be also observed obviously that our method is better than Deeplabv3+ in the edge details of large targets (marked the red box) because our method can provide different sizes of receptive fields and have good segmentation performance for different scale objects.Along the down-sampling process in U-Net, edge feature information becomes less and less, while semantic one becomes richer and richer. For further verification, we visualize the feature maps of different levels (i.e., from S 1 to S 5 ) in ResUNet_C 5 F. As shown in Figure 7 , the feature maps of low-level output (S 1 and S 2 ) contain more details, and the feature map in S 3 is the closest to the edge GT. With the deepening of down-sampling, edge feature information becomes less obvious. In the back propagation, we can extract more semantic information from the feature maps of high-level, as shown in S 5 . It demonstrates that our ESM in low-level and ASSM in hige-level are very efficient to deal with a such difficult segmentation.

Ablation Experiments

To further analyse and test the validity of the proposed modules, a series of comparison experiments are conducted on our dataset by using various combinations among ESM, ASSM and AFM based on the baseline ResUNet. The experimental results are shown in the third row of Table 4 , and each module can improve independently the Dice coefficient of infection segmentation. Thereinto, compared with the baseline ResUNet without any other modules, ASSM can obtain independently the greatest performance improvements, followed by AFM. While for various combinations between ESM, ASSM and AFM, they can also outperform their separate modules, and the combination of ASSM and AFM can obtain slightly better performance than that of ESM and AFM. Finally, the combination of the three modules can obtain the best performance, the reason is that the integration can take full advantage of them and obtain the optimal segmentation effect. Our network can be generalized for other segmentation applications due to the effectiveness of its architecture.To test the effects of the proposed modules in the decoder, ESM and ASSM are applied separately or jointly in the up-sampling path. For convenience, * indicates the corresponding modules and stages in the up-sampling path (shown in Figure 2 ). Owing the symmetric structure between the encoder and decoder, ESM and ASSM are symmetrically placed in the low level (i.e., S * 1 to S * 2 ) and high level (i.e., S * 3 to S * 5 ) of the up-sampling path, respectively. The experimental results are shown in the fourth row of Table 4 . Compared with the baseline method, the Dice performance can be improved in certain extent when these modules are separately or jointly adopted in up-sampling path, particularly the combination of the three modules can obtain the second best segmentation performance. However, the obtain performance in the up-sampling path is slightly worse than that of the corresponding down-sampling path in general. It means that the proposed Co-supervision scheme can both guide the network learning the features of edges and semantics in the down-sampling and up-sampling paths, but the effect would be more appreciable when the supervision modules is applied in the down-sampling path. The reason is that the levels of the down-sampling path contain richer primitive feature information than those of the up-sampling path owing to the encoder close to the original input data, while the edge and semantic information exist more or less some loss and noise when reconstructing a higher resolution layers by using bilinear interpolation up-sampling. Accordingly, the supervision in the levels of the down-sampling path is more stronger than that of the up-sampling path.However, interestingly, the segmentation performance is even decreased compared with the baseline method when the proposed Co-supervision scheme are simultaneously applied in the down-sampling and up-sampling paths, and the fourth row of Table 4 shows the results. Except the combination between ESM, ESM * and AFM, all combinations between the down-sampling and up-sampling paths can obtain poorer segmentation performance than the baseline method. While the combination between ESM, ESM * and AFM can increase by about 1% over the baseline method. The most probable cause is the conflict and interference of the Co-supervision between the down-sampling and upsampling paths. For example, the down-sampling path (i.e., encoder) is used to encode the input image into feature representations at multiple different levels, thereby capturing the context of the image like edge detail information. While the up-sampling path (i.e., decoder) is to semantically project the discriminative features (lower resolution) learned by the encoder onto the pixel space (higher resolution) to get a precise localization. Correspondingly, the loss function is to put more emphasis on edge details in the encoder path, while to highlight localization information for the decoder path. But all the feature maps of the decoder come from the encoder by concatenating and up-sampling, which results in the conflict and interference between the encoder and decoder when the Co-supervision modules are simultaneously applied in the two paths. 

Comparison of Fusion Methods

Multilevel feature fusion means different level of feature maps are integrated together to enrich the feature information, and traditional fusion approaches usually use feature addition or concatenation. An addition process is to add multiple feature maps to be one, which means that the amount of information under the characteristics of the description image is increased. While a concatenation is a combination of the number of channels, which means that the features describing the image itself are increased, but the information under each feature is not increased. To further verify the advantage of the proposed AFM, a series of comparison experiments are carried out by only using different fusion approaches, and the segmentation results are shown in Table 5 . It can be seen that the proposed AFM can surpass the other two methods in all metrics except S α (%). The reason is that all feature maps are evenly fused according to the same importance in the adding or concatenating process. However, it is obviously unreasonable because there are great differences between different levels in feature representations, and it is not sufficient to adaptively compensate low level finer details to high level semantic features only by simple adding or concatenating operation. Meanwhile, the concatenation operation can reduce the weight of the feature maps with poor semantics in the subsequent features in the convolution layer, while retaining rich semantic features in the channel. Whereas the addition operation can weaken the discrimination of features due to the simple pixel-wise summation for the feature maps. Therefore, the concatenation fusion method can surpass the addition operation. Figure 8 illustrates the visual results of the fusion process by utilizing an attention mechanism. Y 1 is only processed by the attention block (AB), thereby it is the nearest output to the segmentation prediction of the baseline. While S p is the segmentation results by fusing multiple level feature maps, which would achieve the goal of both high resolution and rich semantics by combining the complementary strengths of multiple level feature maps. It is obvious that the S p is more complete than the P 1 , and its lost information is lesser than that of the P 1 . The obtain confidence P 1 attaches importance to the P 1 to ensure the most information retained. As a complement to the P 1 , whereas, the confidence map 1 − P 1 pays attention to the lost detailed information, and it can exploit sufficient spatial and semantic features to supplement the lost detailed information by fusing different levels. Thus the proposed methods can overcome the under-segmentation problem of the baseline, and retain multi-scale contextual information from multiple different levels. Tables 6-8 . For the MosMedData dataset, our method is slightly superior than Attention U-Net [34] and UNet++ [9] with Dice metric, but it can obtain 3.06% better than its nearest competitor F3Net [20] with Sensitivity (Sens.), and can achieve the best performance among these three methods with all metrics (shown in Table  6 ). In the UESTC-COVID-19 dataset, our method is slightly better than its nearest competitor with Dice and M AE metrics, and is slightly lower than its nearest competitor in Sensitivity (Sens.). Overall, our method can obtain the best comprehensive performance among these methods (shown in Table 7 ). As for the COVID-ChestCT, our method can achieve the first, first and third best performance in Sensitivity (Sens.), M AE and Dice, respectively. Compared with other methods, our method can also achieve the best overall performance (shown in Table 8 ). From the above results, our method can achieve the first three best performances for various datasets using all metrics, and has the best comprehensive performance comparing to other methods.

Conclusion

It is still a challenging task to accurately segment the infected lesions of COVID-19 on CT images owing to the irregular shapes with various sizes and indistinguishable boundaries between normal and infected tissues. In this paper, a novel segmentation scheme is proposed for the infection segmentation of COVID-19 on CT Images. To achieve this, we propose three modules for deep collaborative supervision and attention fusion based on ResUnet. To verify the effectiveness of the proposed scheme, a series of experiments are conducted on four COVID-19 datasets. The results show that our method can achieve the best performance for most of the datasets with metrics, such as Dice, Sensitivity(Sens.) and M AE, and has better generalization performance comparing to the existing approaches.The proposed technique has four advantages as follows. Firstly, it is able to capture rich spatial information in various scales through an edge supervised module, denoted as the ESM, which allows to incorporate the edge supervised information into the initial stage of down-sampling in the framework of ResUnet. As low-level layers contain richer object boundaries, they are used to define the edge supervised loss function to capture all spatial information. The main benefit of this module is to highlight low-level boundary features and provide useful fine-grained constraints to guide feature extraction in semantic segmentation tasks. Secondly, the proposed method can explore semantic information from various scale infections on COVID-19 CT images by using an auxiliary semantic supervised module (i.e., ASSM) that can integrate the appearance supervised information into the later stage of down-sampling. The main advantage of this module is to strengthen high-level semantic information during the feature extraction process. Thirdly, we propose an attention fusion module (i.e., AFM) to fuse multiple scale feature maps of different levels from the up-sampling stage to reduce the semantic gaps between high-level and low-level feature maps. The main advantage of this module is to strengthen and supplement the lost detailed information in high-level representations. Lastly, we construct a joint loss function by combining the edge supervised loss, auxiliary semantic supervised loss and fusion loss. The joint function can guide the network in learning the features of COVID-19 infections, thereby achieving a deep collaborative supervision on edges and semantics. Meanwhile, it can also act as an incentive to effectively fuse multi-scale feature maps of different levels.Although our network can get a good result in segmenting the overall infection region, it is not sufficient to estimate the severity of infected COVID-19, because finer segmentation of the different infection regions is required. In the future, we might collect a large amount of COVID-19 data, and consider further recognizing the severity of COVID-19 according to the area, size, and location of infections.

