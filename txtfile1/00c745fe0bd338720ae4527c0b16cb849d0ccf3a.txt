I. INTRODUCTION

Federated learning (FL) is a decentralized machine learning paradigm where multiple clients collaboratively train a global model under the orchestration of a central server [1] . Clients can keep their data local and only upload model updates (e.g., represented by parameters or gradients) trained by their data. There are two types of FL: cross-device FL and cross-silo FL [1] . In cross-device FL, clients are usually small distributed entities (e.g., smartphones, wearables, and edge devices), with each having a relatively small amount of local data. Hence, for cross-device FL to succeed, it requires many edge devices to participate in the training process. In cross-silo FL, however, clients are companies or organizations (e.g., hospitals and banks). The number of participants is small, and each client is expected to participate in the entire training process.The focus of this paper is cross-silo FL. The practical industrial examples of cross-silo FL abound. In the medical and health care domain, Owkin collaborates with pharmaceutical companies to train models for drug discovery based on highly sensitive screening datasets [2] . FeatureCloud utilizes FL to perform biomedical data analysis (e.g., COVID) [3] . In the financial area, WeBank and Swiss Re cooperatively conduct data analysis and provide financial and insurance services [4] .The success of a global model requires the clients to contribute sufficient data for local model training. In cross-silo FL, however, the organizations can be not only collaborators but also business competitors. Clients may free-ride (i.e., not use enough data for training), which jeopardizes the performance of the global model. Further, since the training data in cross-silo FL can be highly-sensitive (e.g., medical records and financial data), the clients may have substantial privacy concerns.Even if FL does not directly expose clients' local data, recent research has shown that FL can still be vulnerable to various attacks when communicating model parameters [5] , [6] . Such privacy leakage also prevents clients from using enough data for training.In fact, recent work has studied the free rider phenomenon in FL [7] , [8] . For example, the work in [7] establishes an approach to inspect the clients' distribution for the detection of free-rider attacks. Free riding is detrimental to the global model accuracy, leading to the failure of cross-silo FL. Further, the detected free riding behavior can damage the willingness of other participating clients to cooperate in the future. We aim to analyze and address the free-riding issue in this paper.To this end, we propose a framework where the profit/benefit obtained from the global model can be properly allocated to clients to incentivize data contribution. More specifically, we consider that after the cross-silo FL terminates, the central server (or a trusted third party) can generate some profits/benefits from the global model (e.g., via selling it in a model trading market or via contracts among clients). The profit amount is positively correlated to the global model accuracy [9] . Then, the central server properly allocates the profits among clients using predefined mechanisms. It is important to note that the central server does not need to decide the profit allocation mechanism. In practice, the organizations themselves can negotiate a profit allocation mechanism and enforce its implementation via a contract [10] .A reasonable profit allocation mechanism should reward those who contribute more data in training to incentivize data contribution and eliminate free riders. In this paper, we consider three widely adopted profit allocation mechanisms, i.e., linearly proportional (LP) where each client's contribution is measured proportionally to its data size [11] ; leave-one-out (LOO) where the contribution is calculated by the difference of the global model accuracy between with and without the client's participation [12] ; and Shapley value (SV) where the contribution is measured by the average marginal influence on the global model accuracy [13] . the cross-silo FL clients as a game and analyze its equilibrium. To answer Question 2, we analyze and compare the equilibria under the three mechanisms. The clients' equilibrium data contribution under different mechanisms sheds light on which mechanism incentivizes most data contribution and hence best addresses the free rider issue.The key contributions of this paper are listed as follows:• Incentivizing Data Contribution via Profit Allocation in Cross-Silo FL: To the best of our knowledge, this is the first paper that systematically studies how to incentivize clients' data contribution via appropriate profit allocation in cross-silo FL. To this end, we formulate the client interactions as a novel data contribution game and analyze its equilibrium. • Novel Equilibrium Analysis: We analyze both the symmetric and asymmetric equilibria of the game. We derive closed-form solutions to symmetric equilibrium. For the asymmetric case, the problem is a challenging non-convex program. We address this issue by proposing a distributed algorithm to compute the equilibrium. • Performance Comparison: We compare the performance of three widely used mechanisms, i.e., LP , LOO, and SV . We show that the three mechanisms achieve the same symmetric equilibrium structure. However, at asymmetric equilibrium, LP has superior performance than both SV and LOO in encouraging data contribution and eliminating free riders. • Practical Insights: We derive useful insights that are robust to both the theoretical analysis and numerical results. We show that the equilibrium data contribution decreases with the number of clients and the privacy sensitivity (i.e., privacy cost per data sample). Moreover, we show that the clients' data contribution increases with their data capacity at equilibrium. The remainder of this paper is as follows. We review related work in Section II. We introduce the system model in Section III. We analyze the game and propose a distributed algorithm to compute the equilibrium in Section IV. We show numerical results in Section V. We discuss challenges and opportunities in Section VI and conclude in Section VII.

II. RELATED WORK

Cross-Silo FL While existing studies focus on cross-device FL, some recent works analyzed cross-silo FL. The work in [14] studies the topology design to maximize the number of communication rounds per unit time. The work in [15] combines additively homomorphic secure summation protocols with differential privacy to preserve strict privacy. The study in [16] proposes a heuristic approach to address the non-i.i.d. issue. The study in [17] devises an algorithm FedKT that enables few-shot cross-silo FL. However, none of these works analyzes how to address the free-rider issues.Free Rider Issue There are some existing studies on identifying the free-rider issue in FL [7] , [8] , [18] . For example, the work in [7] establishes an approach to inspect the clients' distribution for detecting the free-rider attacks. However, these papers focus on identifying the free rider phenomenon instead of analyzing its motivation or addressing the issue effectively. The work in [19] proposed a repeated game solution to address this issue. However, their solution requires the clients to participate in a game with infinite phases, which is unlikely in practice. Our work builds upon free rider detection and seeks to mitigate the issue within one phase.Profit Allocation Profit allocation in FL pertains to compensating the clients for contributing their quality data for model training. To achieve this, the central server needs to effectively and fairly evaluate the clients' contribution. Existing studies mainly focus on three types of contribution evaluation/profit allocation mechanisms: linear proportional [11] , leave-one-out [10] , [12] , and Shapley-value-based methods [13] , [20] , [21] . However, these papers focus on deriving efficient and fair algorithms for contribution valuation/profit allocation, rather than analyzing their impact on the clients' free rider behaviors.In summary, this is the first paper to study how to address the free rider issue in cross-silo FL via proper profit allocation.

III. SYSTEM MODEL

We first introduce a typical cross-silo federated learning process in Section III-A. Next, we present the model for the clients' decisions and payoff functions in Section III-B.

A. A Cross-Silo Federated Learning Process

We consider a set N = {1, 2, · · · , N } of clients (e.g., hospitals) who aim to collectively train a global model. Each client n ∈ N owns a local data set D n which consists of D n |D n | data points. In this paper, we assume that the data are i.i.d. across all clients [19] , [22] . This is reasonable in cases where different hospitals train a diagnosis model for the same diseases. Considering i.i.d. data also serves as a starting point and enables closed-form insights that might go beyond the i.i.d. case. We leave the study of non-i.i.d. data into future work.Each client can strategically choose a subset X n ∈ D n of local data for model training, and we use x n |X n | to denote the size of the chosen data set. Let s i n denote the i-th data sample in X n . In cross-silo federated learning, the clients use their chosen local data to train a global model represented by a weight vector ω. We define:: the loss function for s i n ∈ X n under ω. • L n (ω): the expected local loss function of client n averaged over l(ω; s i n ) for all s i n ∈ X n . • L(ω): the global loss function with the following form:The clients seek to derive the optimal weights of the global model ω * that minimize the global loss function in (1):To derive ω * , the cross-silo FL proceeds in multiple rounds. In this paper, we consider that the server adopts the widely used FedAvg algorithm to find ω * [5] .In each round r, the clients perform the following steps:1) The clients download the global model ω r−1 generated from the previous training round.2) The clients execute local trainings with ω r−1 over the chosen data sets via mini-batch stochastic gradient descent (SGD) [23] .3) The clients derive the updated local models ω r n , ∀n ∈ N and send them to the server for global aggregation:Assumptions We assume that the server knows each client's used data size x n (i.e., the weight in the aggregation in Eq. (3)). This is a widely adopted assumption for FedAvg [5] , [24] , [25] . Further, we assume that clients will truthfully report their local models to the server, as untruthful reporting can be detected using the trusted execution environments proposed in [26] . Moreover, we assume that each client will use the same data size x n throughout the entire training. Note that the truthful reporting of model updates and the faithful training using the chosen data size can be specified and enforced by a contract signed by clients.

B. Clients' Decision and Payoff

In this subsection, we define each client's strategy and payoff function.1) Client Data Contribution Strategy: Each client n chooses how many data samples to use in the local training, and the global model accuracy relies on all clients' data contributions. 1 Let x n ∈ {0, 1, · · · , D n } be a discrete variable denoting client n's data contribution level.Let G be the number of training rounds and ω G be the global model parameters after G rounds of training. Then, the global model accuracy loss can be represented by L(ω G ) − L(ω * ), where L(ω G ) and L(ω * ) are the global loss values under ω G and ω * , respectively. According to the celebrated conclusions in [19] , [23] , the expected global model accuracy loss is bounded by:where B is the total batch size that all the clients use for training, i.e., B = n∈N x n . Notice that the loss upper bound decreases in B. As clients invest more data in the training, the global model would achieve a higher accuracy. We use A(x n , x −n ) to denote the global model accuracy loss, and it is approximated by the upper bound in (4) [19] , [22] :where x −n = {x n } n ∈N \{n} .2) Allocated Profit for Data Contribution: As mentioned, the clients in cross-silo federated learning can be business competitors and have large privacy concerns. Hence, the clients have a natural incentive to free-ride, i.e., the clients may be selfish and do not contribute sufficient data for the training process. To alleviate this issue, we consider that the server in cross-silo FL can orchestrate the learning process and appropriately distribute the profit generated from the global model. Specifically, given the clients' data contribution, we assume that the sever can generate a total profit P (x n , x −n ) (e.g., through selling it at the model trading market) as follows [9] :Here, P base is a constant capturing the base profit and A(x n , x −n ) is the penalty term. A larger model accuracy loss corresponds to a smaller amount of profit Let the mapping F : {x n } n∈N → {CI n (x n , x −n )} n∈N denote a general profit allocation mechanism, where CI n (x n , x −n ) is the contribution index of client n. Each client n obtains a proportion of the total profit calculated byThe clients compete with each other in terms of obtaining the total profit.3) Privacy Cost: The clients in cross-silo federated learning incur privacy costs. For example, hospitals can be highly sensitive to their patients' personal data and hence are unwilling to contribute data for training. Notice that even if federated learning does not directly expose the detailed contents of the training data (whereas model updates are communicated), clients can still be vulnerable to various attacks such as the inference attack [27] . In such cases, the clients' privacy can be compromised, which leads to privacy costs.In this paper, we consider that each client n incurs a linear privacy cost [28] :where µ n ≥ 0 presents the privacy sensitivity of clients.

4) Computation and Communication Costs:

The local model training process consumes computational resources. The CPU energy consumption relies on various factors, such as the client's computing chip architecture, the number of CPU cycles to perform the local training, and the CPU processing speed (in cycles per second) [29] . Since the clients in cross-silo federated learning (e.g., companies or organizations) usually have strong computational resources, we consider that the computational cost for each client is a constant C comp n ≥ 0. In a cross-silo federated learning process, clients upload their local model updates to the server for aggregation, and then download the updated global model for the next training rounds [30] . Since the cross-silo FL clients are expected to have reliable transmission networks (e.g., high-speed wired networks), we consider that the communication cost for each client is a constant C comm n ≥ 0.

5) Clients' Payoff Function:

We define each client n's payoff function asThe termCIn(xn,x−n)n ∈N CI n (x n ,x −n ) ·P (x n , x −n ) captures the profit allocated to client n. The terms C pri n (x n ), C comp n , and C comm n represent client n's privacy cost, computation cost, and communication cost, respectively.

IV. DATA CONTRIBUTION GAME ANALYSIS

In this section, we first formulate the data contribution game among the clients in Section IV-A. We then introduce various profit allocation mechanisms and analyze their equilibria in Section IV-B. We finally present a distributed algorithm to compute the equilibrium strategy in Section IV-C.

A. Game Formulation

Given any profit allocation mechanism F, each client in cross-silo federated learning strategically chooses its data contribution level x n to maximize its own payoff in (8) . Since each client's data contribution affects the global model accuracy and hence the total profit distributed to other clients, the clients interact in a game-theoretical fashion. We model the interactions between the clients as a novel data contribution game as follows:

Game 1. (Data Contribution Game)

• Players: the set N of clients. • Strategies: each client n ∈ N decides the data contribution level x n ∈ {0, 1, · · · , D n } for local training. • Payoffs: each client n ∈ N seeks to maximize its own payoff function defined in (8) .In Game 1, given others' decisions x −n , each client n solves the problem blow, which determines its best response.var. x n ∈ {0, 1, · · · , D n }.We aim to derive the Nash equilibrium of Game 1, which is defined as follows.n constitutes a Nash equilibrium of Game 1, if for all x n ∈ {0, 1, · · · , D n } and for all n ∈ N ,At a Nash equilibrium, each client's strategy is a best response to the strategies played by the other clients, i.e., the strategy profile is the fixed point of all clients' best response choices. Notice that a client n's strategy choice is the optimal solution of Problem 1, and it is a function of other clients' strategies x −n .A client can be characterized by many different parameters. However, since the focus of this paper is to analyze the impact of various profit allocation mechanisms on clients' data contribution strategy, we assume that clients are homogeneous in two dimensions. Specifically, we assume that D n = D, ∀n (homogeneous data capacity) and µ n = µ, ∀n (homogeneous privacy sensitivity). Even under this relatively simple setting, we will show that the equilibrium analysis is highly non-trivial due to the complex couplings between the clients' decisions.

B. Equilibrium Analysis

In this subsection, we analyze the clients' equilibrium strategies under three widely adopted profit allocation mechanisms in federated learning, i.e., linearly proportional (LP), leave-oneout (LOO), and the Shapley value (SV) mechanisms. Notice that different mechanisms would lead to different calculations of clients' contribution indexes. We use CI z n (x n , x −n ) to denote client n's contribution index under mechanism z ∈ {LP, LOO, SV }.Next, we introduce the three mechanisms as follows:Linearly Proportional (LP) [11] : Each client's contribution index is proportional to its data size:Leave-One-Out (LOO) [12] : Each client's contribution index is measured by the difference of the global model accuracy between with and without its participation. Hence, we have:Shapley-Value (SV) [13] : Shapley value, named in honor of Lloyd Shapley, is a solution concept in cooperative game theory. It assigns a unique distribution of a total profit via the average marginal contribution made by each client. More specifically, the clients' contributed indexes are calculated as follows:where A(·) is given in (5) .For mathematical convenience, we start with analyzing the symmetric Nash equilibria of Game 1. Symmetric Nash equilibrium is a celebrated equilibrium concept where all the players use the same equilibrium strategies (e.g., prisoner's dilemma) [31] . We characterize the clients' symmetric equilibrium in Theorem 1. Note that the equilibrium result in (14) is derived assuming that the data size takes a continuous value. One can round the result in (14) for practical applications.We discuss the implications of Theorem 1 as follows:• Competition impact The equilibrium data contribution level decreases in the client number N . As the cross-silo FL population becomes larger (i.e., greater competition), clients tend to use fewer data during training (i.e., freeriding). This is because the clients can still obtain a good amount of profit (due to more data contributed by other competitor clients) while substantially reduce the privacy cost. • Privacy impact The equilibrium data contribution decreases in the privacy sensitivity µ. As clients are more sensitive to their data privacy for participating in cross-silo FL, they will contribute fewer data for model training to reduce the privacy costs. • The equilibrium data contribution (weakly) increases in the data capacity D. Having more data corresponds to a greater flexibility for decision making. A client can choose to contribute more to earn more profits (when the privacy cost is not too large). A somehow counter-intuitive result from Theorem 1 is that all the mechanisms (i.e., LP, LOO, SV) yield the same equilibrium structure. However, the conditions for the equilibrium to exist vary across the three mechanisms. See Appendix A for details. One may expect that the three mechanisms lead to different equilibrium behaviors, since they calculate the clients' contribution indexes differently. (see Eq. (11) to Eq. (13)). However, at a symmetric equilibrium where the all the clients adopt the same strategy, the profit share under different mechanisms will be the same for each client (i.e., CI z n (xn,x−n) n ∈N CI z n (x n ,x −n ) = 1 N , ∀n ∈ N , ∀z ∈ {LP, LOO, SV }). This gives the same incentive to clients and hence leads to the same equilibrium structures.Following this observation, we are able to present a more general result for any fair mechanism used for profit allocation. We first define the fair mechanism as follows.Definition 2. A profit allocation mechanism F is said to be fair if the same data contribution levels lead to the same profit share. That is, if x i = x j , ∀i, j ∈ N , then we have. (15) Based on the definition, we have the following result.Theorem 2. (Proof in Appendix B) At any symmetric Nash equilibrium admitted by a fair mechanism, the clients' strategies must have the form as in (14) .In fact, a game may have multiple equilibria and some of them may be asymmetric (i.e., different clients may choose different actions). Examples include the classical coordination game [31] and more recent crowd-sourcing game [32] . For completeness of our analysis, besides the symmetric equilib-Algorithm 1 Best Response Update 1: Initialization Let the iteration index be t = 0. Each client n ∈ N starts with x n (t = 0) = 1. 2: repeat 3: for each client n ∈ N do 4:Best response update: client n updates its data size via solving:x n (t) = min arg max xn∈{1,2,··· ,D} u n (x n , x −n (t)) .

5:

end for 6: Update strategy profile: x(t + 1) ← x(t).

7:

Update iteration index: t ← t + 1. rium in Theorem 1, we further attempt to solve the asymmetric equilibrium for Game 1.Unfortunately, when considering the asymmetric case, each client's best response problem in Problem 1 becomes nonconvex and hence is difficult to solve. This further complicates the derivation of an asymmetric equilibrium. To address this issue, we propose a distributed algorithm to compute the equilibrium in Section IV-C.

C. Distributed Algorithm Design

In this subsection, we design a distributed algorithm for the cross-silo FL clients to compute the equilibrium strategy of Game 1. Note that the algorithm is intended to find a Nash equilibrium that is potentially asymmetric. As will be shown in Section V, the algorithm converges to different asymmetric Nash equilibria under different mechanisms.The proposed algorithm is given in Algorithm 1, where the clients iteratively update their data sizes until the algorithm converges. Let t ∈ Z + denote the iteration index. Each client n ∈ N starts with a minimum data size x n (t = 0) = 1 (Line 1). We do not consider the minimum data size to be zero due to two reasons. First, the clients have to use non-zero data points to train a local model. Second, a zero data size for all clients can lead to the singularity issue when computing the payoff functions. While the algorithm does not converge, each client n updates its data size based on the best response dynamics in Line 4. Then, after all the clients update their data sizes, the algorithm proceeds into the next iteration t + 1. The algorithm terminates when the absolute difference between x n (t + 1) and x n (t) for all n ∈ N is smaller than a predefined threshold.

V. EXPERIMENTAL RESULTS

In this section, we conduct numerical experiments to evaluate the performance of three mechanisms, i.e., LP, LOO, and SV. More specifically, we compare the mechanisms through the lens of the clients' data contribution at equilibrium (calculated by Algorithm 1). As will be seen, the numerical results validate our theoretical analysis. Moreover, we show that LP outper-forms both LOO and SV in encouraging data contribution at asymmetric equilibria. 2

A. Impact of Client Number

The client number crucially affects the clients' behaviors, as it determines the fierceness of the client competition. Since clients are are companies or organizations, cross-silo FL usually has a small scale.In this subsection, we study the impact of client number N on the clients' data contribution at equilibrium. As suggested by practical cross-silo FL experiments [33] , we use P base = 50, D = 5000; G = 50; µ = 5 * 10 −7 , C comm n = C comp n = 0.2, ∀n ∈ N . We choose N from set {2, 4, 5, 6, 8, 10}. Fig. 1a plots how the average data contribution (i.e.,x * = 1 N n∈N x * n ) changes with N . Fig. 1b plots the individual client contribution (represented by a bar) at N = 5 under the three mechanisms.In Fig. 1a , we observe that the average data contribution decreases in the client number N . As more clients participate in the cross-silo FL, some of them start to take advantage of other contributing clients by using few data in training. More specifically, the contributing clients use enough data for training and achieve a satisfactory global model accuracy. The other clients, however, can incur small privacy costs by free-riding on the good model. Consequently, the average data contribution decreases in the client number N . Note that this result is consistent with our theoretical analysis in Theorem 1, which we summarize as follows: Observation 1. The clients' average data contribution at equilibrium decreases in the client number N .

B. Impact of Privacy Sensitivity

Privacy issue in cross-silo federated learning deserves special attention. For example, hospitals can be highly sensitive to their data (which can be patients' medical records).In this subsection, we study how clients' average data contribution changes with the clients' privacy sensitivity µ. For the experimental setup, we use P base = 50, D = 5000, G = 50, N = 5, C comm n = C comp n = 0.2, ∀n ∈ N . We choose µ from the set {µ 0 , 3µ 0 , 5µ 0 , 7µ 0 , 9µ 0 } where µ 0 = 10 −7 . Fig.  2a plots how the average data contribution depends on µ. Fig.  2b plots the individual client contribution at 3µ 0 .In Fig.2a , we observe that the average data contribution at equilibrium (weakly) decreases in the privacy sensitivity (e.g., SV). A larger privacy sensitivity corresponds to a larger privacy cost per unit of data. The clients tend to use a smaller amount of data to achieve a good tradeoff between the allocated profit and the privacy costs. This result is also consistent with our theoretical analysis shown in Theorem 1. We summarize the observation below:Observation 2. The clients' average data contribution at equilibrium weakly decreases in the privacy sensitivity. 2 Since we have fully characterized the symmetric equilibria under LP, LOO, and SV in Theorem 1, we refrain from presenting numerical results for symmetric equilibria due to space limitations. 

C. Impact of Data Capacity

In this subsection, we study how data capacity affects the clients' behaviors in cross-silo federated learning. More specifically, we study how clients' average data contribution at equilibrium depends on the data capacity D. In the experiments, we set P base = 50, µ = 5 * 10 −7 , G = 50, N = 5, C comm n = C comp n = 0.2, ∀n ∈ N . We change D from 5000 to 10000 with a step size 1000. Fig. 3a plots how the average contribution depends on D. Fig. 3b plots the individual client contribution at D = 8000.In Fig. 3a , we first observe that the average data contribution (weakly) increases in the data capacity D (e.g., LP). As clients possess more data points, they have greater flexibility in determining how many data to use for local training. On the one hand, contributing more data leads to a higher global model accuracy and a larger profit share. On the other hand, using more data for training also yields a greater privacy cost. Hence, when the profit gain outweighs the privacy cost, the clients will contribute more data (e.g., LP and LOO). Otherwise, the clients do not increase the data size (e.g., SV). Note that this result also validates our analysis in Theorem 1, and is summarized as follows:Observation 3. The clients' average data contribution at equilibrium weakly increases in the data capacity D.It should be noticed that the conclusions drawn from Observations 1 to 3 (w.r.t. asymmetric equilibrium) share consistent trends with our theoretical analysis in Theorem 1 (w.r.t. symmetric equilibrium). This implies that the insights are robust to different equilibrium cases and hence are likely to hold in practice. 

D. Comparison of LP, LOO, and SV

In this subsection, we compare the mechanism performance under LP, LOO, and SV.From Figs. 1a, 2a, and 3a, we consistently observe that the average data contribution under LP is larger than that under SV. Meanwhile, the average contribution under SV is larger than that under LOO. The main reason is that the marginal profit share per data contribution under LP is greater than that under SV and LOO. More specifically, we can see from Eq. (11) that the client's contribution index under LP is linearly proportional to its data size. For SV and LOO, however, the contribution index is sub-linear in the client's data size (e.g., see Eq. (12)). That is, given the same data contribution, LP helps generate the largest contribution index for a client. As a result, the clients are incentivized to contribute the largest number of data points under LP.From Figs. 1b, 2b, and 3b, we see that LP incentivizes most clients to contribute all data (e.g., 4 clients in Fig. 2b) ; SV encourages similar moderate data contribution from all clients (e.g., in Fig. 1b) ; LOO leads to most free riders who contribute very few data (i.e., 3 clients in Fig. 3b ). As mentioned, LP incentivizes most data due to generating the largest contribution index. SV encourages similar data size since it averages over all clients' marginal contributions. Interestingly, LOO admits a "winner-take-all" phenomenon, where one client contributes all data while others tend to free ride. Once a client uses many data for training, it can harvest near all the profits and decentivize other clients to invest data. The above observations bear significant practical implications: to mitigate the freerider issue in cross-silo FL, one can adopt the simple linearly proportional rule. We summarize the above key results as follows:Observation 4. LP outperforms SV and LOO in: 1) incentivizing the clients' average data contribution; 2) eliminating the number of free-riders.

VI. DISCUSSIONS AND FUTURE WORK

Our paper takes the first step to analyze and address the freerider issue in cross-silo FL via a game-theoretical perspective. However, there are many unaddressed challenges that merit future study.Non-i.i.d. data We assumed i.i.d data in this paper, which is reasonable in certain cases. However, in other cases, one would expect the organizations to have non-i.i.d. and diverse data. It would be important to characterize the impact of the non-i.i.d. data on the free-rider issue in future work.Optimal mechanism design As a first step, we studied three widely adopted profit allocation mechanisms and compared their performance in incentivizing clients' data contribution. This further motivates the optimal mechanism design that can potentially better incentivize data contribution and eliminate free-riders in cross-silo FL.Equilibrium selection We showed that the data contribution game has multiple equilibria. It is important to further improve the mechanism design (e.g., via signaling) so that clients follow the desirable equilibrium (e.g., where the free riding behavior is minimized).Faithful FL We assumed that the clients faithfully execute local training using the decided data size, and that clients truthfully report their model updates. In conjunction with studies on the detection of free rider and data poisoning, it is equally important to design game-theoretical strategy-proof mechanisms where clients are best off faithfully training local models and truthfully reporting model parameters.Various accuracy models We assumed the global model accuracy to take the form in (5) . Nevertheless, our conjecture is that our proposed algorithm and analysis can be extended to other accuracy models (e.g., [11] ).Implementation We assumed public knowledge, i.e., the clients know the accuracy model in (5) and the profit function in (6) . For practical implementation, the clients can learn an accuracy model using their own data. The clients can also access information about the profit function via investigating the model trading market.

VII. CONCLUSION

In this paper, we study the data contribution game among clients in cross-silo FL. Due to competition and privacy concerns, the clients tend to use few data for model training.To address this issue, we design an incentive mechanism where the central server incentivizes clients' data contribution via properly allocating the profit obtained from the global model. We analyze the game equilibria under three widely adopted mechanisms, i.e., LP, LOO, and SV. We show that the three mechanisms admit an identical symmetric equilibrium structure. However, at asymmetric equilibrium, LP outperforms both LOO and SV in encouraging clients' data contribution and eliminating free riders.

